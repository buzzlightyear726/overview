{"version":3,"file":"component---src-pages-restart-md-35e1aec49cb68463c6e4.js","mappings":"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","sources":["webpack://st4sd-overview/./src/pages/restart.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/alessandropomponio/Documents/GitHub/public/st4sd/overview/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {/*\n       Copyright IBM Inc. All Rights Reserved.\n      SPDX-License-Identifier: Apache-2.0\n     */}\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Use this page to learn how to customize the restart behaviour of components.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">When restarts occur</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Configuring restart behaviour via the component configuration</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Customizing the restart process</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Details</AnchorLink>\n    </AnchorLinks>\n    <p>{`A restart means rerunning a components executable+commandline in the same working directory, normally because the associated task finished without success.`}</p>\n    <p>{`The customizations that can be made include`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Deciding when a restart should be attempted`}</li>\n      <li parentName=\"ul\">{`How many times a restart should be attempted before giving up`}</li>\n      <li parentName=\"ul\">{`Modifying files to prepare for a restart`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` When restarting the following rules hold:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The component executable cannot be changed`}</li>\n      <li parentName=\"ul\">{`The component command line cannot be changed`}</li>\n      <li parentName=\"ul\">{`The component working directory will be the same`}</li>\n      <li parentName=\"ul\">{`It is possible to modify the contents of the working directory before the restart`}</li>\n    </ul>\n    <h2>{`When restarts occur`}</h2>\n    <p>{`FlowIR defines a number of `}<a parentName=\"p\" {...{\n        \"href\": \"#exit-reasons\"\n      }}>{`exit-reasons`}</a>{`. Whether a restart occurs depends on`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The exit-reason`}</li>\n      <li parentName=\"ul\">{`The components configuration`}</li>\n      <li parentName=\"ul\">{`The result of executing developer custom hooks`}</li>\n    </ul>\n    <p>{`By default components are restarted when a component task exits with the following exit-reasons:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ResourceExhausted`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><em parentName=\"li\">{`Max restart attempts:`}</em>{` None i.e. try forever`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SubmissionFailed`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><em parentName=\"li\">{`Max restart attempts:`}</em>{` 5`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`It is `}<strong parentName=\"p\">{`never`}</strong>{` triggered for the following exit-reasons`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Killed`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Cancelled`}</inlineCode></li>\n    </ul>\n    <p>{`It can be turned on/off for`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Success`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`KnownIssue`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SystemIssue`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`UnknownIssue`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ResourceExhausted`}</inlineCode></li>\n    </ul>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` You can trigger the restart process on `}<inlineCode parentName=\"p\">{`Success`}</inlineCode>{` because some programs can signal success when this is not true.`}</p>\n    <h2>{`Configuring restart behaviour via the component configuration`}</h2>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Customizing which exit reasons trigger restart for a component</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Controlling the number of restart attempts</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Special-Case: SubmissionFailed</AnchorLink>\n    </AnchorLinks>\n    <p>{`What exit-reasons trigger a restart attempt for a component, and how many times to try before giving up, can be specified in the component’s YAML.`}</p>\n    <h3>{`Customizing which exit reasons trigger restart for a component`}</h3>\n    <p>{`The exit-reasons that trigger a restart can be customized using the `}<inlineCode parentName=\"p\">{`restartHookOn`}</inlineCode>{` key of the `}<inlineCode parentName=\"p\">{`workflowAttributes`}</inlineCode>{` top-level component key. The value of this key is a list of exit reasons which should trigger the restart process e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`command:\n  executable: ...\nworkflowAttributes:\n  restartHookOn: \n     - UnknownIssue\n     - ResourceExhausted\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` specifying `}<inlineCode parentName=\"p\">{`restartHookOn`}</inlineCode>{` overrides the default, which is `}<inlineCode parentName=\"p\">{`ResourceExhausted`}</inlineCode>{` (see `}<a parentName=\"p\" {...{\n        \"href\": \"#special-case:-submissionfailed\"\n      }}>{`here`}</a>{` for why `}<inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{` is not included here).\nTherefore you must explicitly specify `}<inlineCode parentName=\"p\">{`ResourceExhausted`}</inlineCode>{` in the custom list you give to `}<inlineCode parentName=\"p\">{`restartHookOn`}</inlineCode>{` if you want to restart on this exit-reason in addition to others. `}</p>\n    <h3>{`Controlling the number of restart attempts`}</h3>\n    <p>{`The number of restart attempts for exit-reasons other than `}<inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{` can be customized using the `}<inlineCode parentName=\"p\">{`maxRestarts`}</inlineCode>{` key of the `}<inlineCode parentName=\"p\">{`workflowAttributes`}</inlineCode>{` top-level component key e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`command:\n  executable: ...\nworkflowAttributes:\n  maxRestarts: #Any value >= -1\n`}</code></pre>\n    <p>{`The values -1 and 0 have special meanings:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`-1: No limit on restarts. This is the default`}</li>\n      <li parentName=\"ul\">{`0: Do not restart`}</li>\n      <li parentName=\"ul\">{`N: Restart up to N times`}</li>\n    </ul>\n    <h3>{`Special-Case: SubmissionFailed`}</h3>\n    <p>{`Failure by the specified execution backend e.g. Kubernetes, LSF, to start the components tasks is given the exit-reason `}<inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{`.\nA component task can exit with  `}<inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{` a maximum of five times.\nThe sixth `}<inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{` failed will result in the component transitioning to its final state.`}</p>\n    <p><inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{` is handled separately to other codes as it means the executable did not even run. You cannot turn it off via `}<inlineCode parentName=\"p\">{`restartHookOn`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Note`}</strong>{`: Currently the maximum number of submission failed restarts is the minimum of (`}<inlineCode parentName=\"p\">{`maxRestarts`}</inlineCode>{`, 5).`}</p>\n    <h2>{`Customizing the restart process`}</h2>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Defining a restart hook</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Restart hook function return values</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Restart hook location</AnchorLink>\n    </AnchorLinks>\n    <h3>{`Defining a restart hook`}</h3>\n    <p>{`In many cases further information than the exit-reason is required to decide if a restart should be attempted e.g. checking if certain files have been written, or their content. It may also be neccessary to prepare the working directory of a component for restarting by deleting/modifying/creating files. `}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` provides a mechanism for the workflow developer to add custom code to the restart process for a component. This custom code can decide if the restart should proceed and perform any modifications necessary to the working directory. We call this custom code a `}<inlineCode parentName=\"p\">{`restart hook`}</inlineCode>{`.`}</p>\n    <p>{`This restart hook is called after the filtering on exit-reason i.e. if the workflow has been configued not to restart on a given exit-reason, the restart hook is not called.`}</p>\n    <p>{`The restart hook is supplied by the developer as a python function called `}<inlineCode parentName=\"p\">{`Restart`}</inlineCode>{` with certain parameters (see below). You can put this function in any file that follows the rules in `}<a parentName=\"p\" {...{\n        \"href\": \"#restart-hook-location\"\n      }}>{`restart hook location`}</a>{`.`}</p>\n    <p>{`The signature and docs of this function are:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def Restart(workingDirectory, restarts, componentName, log, exitReason, exitCode):\n    \"\"\"\n    This function is expected to examine the components workingDirectory, optionally make modifications to it, \n    and return a restart decision.\n\n    Parameters\n    ----------\n    workingDirectory: str\n        Directory containing simulation to be restarted\n    restarts: int\n        The number of times this function for this working directory\n    componentName: str\n        The label the workflow engine uses to id this component\n    log: logging.Logger\n        A logger used to write output messages\n    exitReason: str\n        Defines why the program exited\n    exitCode: int\n        The exit-code returned by the program\n\n    Returns\n    -------\n    string: One of the strings defined by experiment.codes.restartContexts that capture the hooks decision\n    \"\"\"\n    \n    #Example: Check if a file call checkpoint.dat exists \n    retval = \"RestartContextRestartNotPossible\"\n    if os.path.exists(os.path.join(workingDirectory, \"checkpoint.dat\")):\n      retval = \"RestartContextRestartPossible\"\n      \n    return retval   \n`}</code></pre>\n    <p>{`The next section describes the possible return values of the `}<inlineCode parentName=\"p\">{`Restart`}</inlineCode>{` function.`}</p>\n    <p>{`Each component can have its own restart function. When the component needs to be restarted, the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` identifies which custom function to use (as decribed in  `}<a parentName=\"p\" {...{\n        \"href\": \"#restart-hook-location\"\n      }}>{`restart hook location`}</a>{`) and calls it with the relevant parameters (see the function parameters in code snippet above). These include the working directory of the failed component.`}</p>\n    <p>{`The custom developer function then can inspect files, modify those files, for example to add a `}<inlineCode parentName=\"p\">{`restart`}</inlineCode>{` keyword, and then tell the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` how to proceed by returning one of the strings in the next section.`}</p>\n    <h3>{`Restart hook function return values`}</h3>\n    <p>{`The custom `}<inlineCode parentName=\"p\">{`Restart`}</inlineCode>{` function must return one of the following strings`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextRestartPossible`}</inlineCode>{`: Should restart`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextHookNotAvailable`}</inlineCode>{`: There is no specific custom logic for this component so try to restart (only need to use this if your custom restart function is used by all components)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextRestartNotRequired`}</inlineCode>{`: A restart is not necessary`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextRestartNotPossible`}</inlineCode>{`: A restart is not poossible`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextHookFailed`}</inlineCode>{`: Tried to check/prepare for a restart but something went wrong`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextRestartConditionsNotMet`}</inlineCode>{`: Couldn’t determing if a restart is possible because some necessary information is missing`}</li>\n    </ul>\n    <h3>{`Restart hook location`}</h3>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`If you’re unsure of  where to put your restart hook first check `}<a parentName=\"p\" {...{\n          \"href\": \"/overview/packaging-workflows\"\n        }}>{`project types`}</a>{` which explains how to bundle additional files with a virtual experiment. `}</p>\n    </InlineNotification>\n    <p>{`The restart hook function `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Must be located in a python file in a directory called `}<inlineCode parentName=\"li\">{`hooks`}</inlineCode>{` that is in the top-level of the experiment instance. `}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This can be done using the experiment package directory structure or using a manifest.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`hooks`}</inlineCode>{` directory must also contain an empty `}<inlineCode parentName=\"li\">{`__init__.py`}</inlineCode>{` file`}</li>\n      <li parentName=\"ul\">{`If the file containing the restart hook function is called `}<inlineCode parentName=\"li\">{`restart.py`}</inlineCode>{` then nothing further is required. However:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This `}<inlineCode parentName=\"li\">{`restart`}</inlineCode>{` hook function will be called for every component and it is the developer’s responsibility to filter what should happen based on the component it is being called for`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`If the file containing the restart hook function is called any other name then this name must be specified in the components YAML using `}<inlineCode parentName=\"li\">{`restartHookFile`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This `}<inlineCode parentName=\"li\">{`restart`}</inlineCode>{` hook function will only be called for components that specify it via `}<inlineCode parentName=\"li\">{`restartHookFile`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`For example you might create restart hook for a component called `}<inlineCode parentName=\"p\">{`MyComponent`}</inlineCode>{` in a file `}<inlineCode parentName=\"p\">{`mycomponent.py`}</inlineCode>{`. The configuration of `}<inlineCode parentName=\"p\">{`MyComponent`}</inlineCode>{` would contain`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`command:\n  executable: ...\nworkflowAttributes:\n  restartHookFile: mycomponent.py\n`}</code></pre>\n    <h2>{`Details`}</h2>\n    <h3>{`Restart Decision Process`}</h3>\n    <p>{`The following describes how given an exit-reason for a component tasks the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` decides to attempt a restart`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If exit-reason is `}<inlineCode parentName=\"li\">{`SubmissionFailed`}</inlineCode>{` and < `}<inlineCode parentName=\"li\">{`maxSubmissionFailed`}</inlineCode>{` attempts and < `}<inlineCode parentName=\"li\">{`maxRestart`}</inlineCode>{` attempts`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Restart `}<strong parentName=\"li\">{`without`}</strong>{` calling the components restart hook `}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Else if exit-reason is in the `}<inlineCode parentName=\"li\">{`restartHookOn`}</inlineCode>{` list and < `}<inlineCode parentName=\"li\">{`maxRestart`}</inlineCode>{` attempts`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If  the components restart hook exists:`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Call it and continue based on its return value`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">{`Else`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Restart`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Else if exit-reason is not in `}<inlineCode parentName=\"li\">{`Success`}</inlineCode>{`/`}<inlineCode parentName=\"li\">{`Killed`}</inlineCode>{`/`}<inlineCode parentName=\"li\">{`Cancelled`}</inlineCode>{` `}<strong parentName=\"li\">{`AND`}</strong>{` the system is unstable`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If  the components restart hook exists:`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Call it and continue based on its return value`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">{`Else`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Restart`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Else`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`A restart it not attempted`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`If a restart is initiated the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` waits until the restarted task finishes before beginning the above decision process again. `}</p>\n    <p>{`If there is no custom restart hook a restart will result in running the task again in the same working dir. This will work for programs that can deduce their restart state when they start-up. `}</p>\n    <p><strong parentName=\"p\">{`Unstable System`}</strong>{`: The `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` monitors the system for IO errors indicating filesystem instability e.g. unable to read/write component working dirs.  If a component fails when it determines such an instability exist, the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` will wait for the instability to resolve and restart the component i.e. it assumes the failure was due to the IO issues. `}</p>\n    <p>{`In every other case (no restart, failed restart) the component finishes with the original exit-reason.`}</p>\n    <h3>{`Exit Reasons`}</h3>\n    <p>{`When a components task exits the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` assigns it an exit-reason. Usually these map to the tasks return-code`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Success`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Return-code 0`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Killed`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Received `}<em parentName=\"li\">{`SIGKILL`}</em></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Cancelled`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Received `}<em parentName=\"li\">{`SIGINT`}</em>{` or `}<em parentName=\"li\">{`SIGTERM`}</em></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`KnownIssue`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Return-code was between 1 and 127 inclusive`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SystemIssue`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Received a signal not `}<em parentName=\"li\">{`SIGINT/SIGTERM/SIGXCPU/SIGKLL`}</em>{` (return code >= 128)`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`UnknownIssue`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Could not determine why the task failed. Maybe an internal `}<inlineCode parentName=\"li\">{`st4sd-runtime`}</inlineCode>{` issue.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ResourceExhausted`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Task hit the wall time. This can involves it gettting `}<em parentName=\"li\">{`SIGXCPU`}</em>{` and hence exiting with return-code 128+`}<em parentName=\"li\">{`SIGXCPU`}</em>{` (often 152). However it can be deduced without return-code from some backends`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Default wall time is 1 hour`}</strong></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SubmissionFailed`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The submission to the execution backend failed at some point. `}</li>\n        </ul>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","small","kind","isMDXComponent"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-runtime-service-mdx-2c92b6327a238642fa6f.js","mappings":"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","sources":["webpack://st4sd-overview/./src/pages/runtime-service.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/travis/build/st4sd/overview/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {/*\n       Copyright IBM Inc. All Rights Reserved.\n      SPDX-License-Identifier: Apache-2.0\n     */}\n    <p>{`The ST4SD runtime service (`}<a parentName=\"p\" {...{\n        \"href\": \"/overview/api-docs/openapi/st4sd-runtime-service/st4sd-runtime-service.openapi.html\"\n      }}>{`swagger available here`}</a>{`) supports adding virtual experiment entries to a catalog and interacting with them, including:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`launching virtual experiment instances`}</li>\n      <li parentName=\"ol\">{`monitoring virtual experiment instances`}</li>\n      <li parentName=\"ol\">{`downloading outputs and measured properties of virtual experiment instances`}</li>\n    </ol>\n    <p>{`ST4SD provides a python client for the ST4SD runtime service REST-API. The python client is currently part of `}<inlineCode parentName=\"p\">{`st4sd-runtime-core`}</inlineCode>{`. You can find instructions for installing the `}<inlineCode parentName=\"p\">{`local client`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/installation#set-up-local-client\"\n      }}>{`here`}</a>{`.`}</p>\n    <p>{`The FAQ below assumes:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`you have already installed a local client.`}</li>\n    </ol>\n    <h2>{`How do I connect to the ST4SD runtime service?`}</h2>\n    <p>{`First, you need to get the URL to the ST4SD runtime service endpoint. Ask the administrator of the ST4SD instance to provide this URL to you. They will also need to create an account for you on their ST4SD instance and configure RBAC so that your account can read `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` objects in the namespace that ST4SD is installed in.`}</p>\n    <p>{`If the ST4SD instance is on IBM Cloud you will need to login to the OpenShift Web Console once so that IBM Cloud completes the setup of your account.`}</p>\n    <p>{`First you need to obtain an `}<inlineCode parentName=\"p\">{`auth-token`}</inlineCode>{`. the python code below will open a URL in your browser. The web-page will ask you to login to ST4SD typically by delegating the authentication to the OpenShift server hosting ST4SD. If this is the very first time you login to this ST4SD URL you may be asked for your permission to allow ST4SD to know that you are logging in.`}</p>\n    <p>{`After you log in you will be presented with a page that contains your `}<inlineCode parentName=\"p\">{`auth-token`}</inlineCode>{`, copy it and return to this document. By default, this token expires every 168 hours (1 week).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import webbrowser\n# enter the https:// ST4SD url below\nurl=\"https://st4sd-prod.ve-5446-9ca4d14d48413d18ce61b80811ba4308-0000.us-south.containers.appdomain.cloud\"\n\nif url.endswith(\"/\"):\n    url = url[:-1]\n\nurl = '/'.join([url, \"authorisation/token\"])\n\nwebbrowser.open(url)\n`}</code></pre>\n    <p>{`You should now have an `}<inlineCode parentName=\"p\">{`auth-token`}</inlineCode>{`. Use it below to login to ST4SD.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import experiment.service.db\n\n# enter the https:// ST4SD url below\nurl=\"https://st4sd-prod.ve-5446-9ca4d14d48413d18ce61b80811ba4308-0000.us-south.containers.appdomain.cloud\"\n\n# enter your auth-token below\nauth_token=\"put your authentication/token - do not share it with anyone\"\n\napi=experiment.service.db.ExperimentRestAPI(url, cc_auth_token=auth_token)\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ExperimentRestAPI`}</inlineCode>{` initializer validates the authentication token you provided and will raise an exception if it is invalid. If you do not get an Exception that means you can use `}<inlineCode parentName=\"p\">{`api`}</inlineCode>{` to interact with the `}<inlineCode parentName=\"p\">{`st4sd-runtime-service`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`st4sd-datastore`}</inlineCode>{` REST-APIs.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\nST4SD may print warnings to your python terminal e.g. `Unable to import pythonlsf - limited LSF functionality will be available`. These are not problems. They are just informing you that select features are not supported on the machine you are using. You can ignore them.\n    </InlineNotification>\n    <h2>{`How do I get the status of a virtual experiment instance?`}</h2>\n    <p>{`First, instantiate `}<inlineCode parentName=\"p\">{`experiment.service.db.ExperimentRestAPI`}</inlineCode>{` before you continue ay further. See `}<a parentName=\"p\" {...{\n        \"href\": \"#how-do-i-connect-to-the-st4sd-runtime-service\"\n      }}>{`How do I connect to the ST4SD runtime service?`}</a>{` for instructions.`}</p>\n    <p>{`All virtual experiment instances have a unique REST-API identifier. We use the term `}<inlineCode parentName=\"p\">{`rest_uid`}</inlineCode>{` to refer such identifiers.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# put here the rest_uid of the virtual experiment instance\nrest_uid = \"toxicity-predictions-trol7a\"\n\nstatus = api.api_rest_uid_status(rest_uid)\n`}</code></pre>\n    <p>{`The variable `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` contains a plethora of information including metadata about the status of the virtual experiment instance and its outputs. Here, we will focus on the status.`}</p>\n    <p>{`Let’s try printing this information to get a better look:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import json\nprint(json.dumps(status['status'], indent=2))\n`}</code></pre>\n    <p>{`Here is an example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"experiment-state\": \"finished\",\n  \"total-progress\": 1.0,\n  \"exit-status\": \"Success\",\n  \"stages\": [\n    \"Toxicity-prediction\"\n  ],\n  \"current-stage\": \"Toxicity-prediction\",\n  \"stage-state\": \"finished\",\n  \"stage-progress\": 1.0,\n  \"error-description\": \"\",\n  \"meta\": { ... omitted ... }\n}\n`}</code></pre>\n    <p>{`The virtual experiment instance above reports that:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The orchestrator observed that the virtual experiment instance terminated (`}<inlineCode parentName=\"li\">{`experiment-state`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`finished`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`The virtual experiment instance has produced all its outputs (`}<inlineCode parentName=\"li\">{`total-progress`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`1.0`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`The virtual experiment instance completed successfully (`}<inlineCode parentName=\"li\">{`exit-status`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`Success`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`The experiment had 1 stage (`}<inlineCode parentName=\"li\">{`stages`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`[\"Toxicity-prediction\"]`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`Toxicity-prediction`}</inlineCode>{` was the most recently executed stage with the lowest stage index (`}<inlineCode parentName=\"li\">{`current-stage`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`Toxicity-prediction`}</inlineCode>{`).`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`All its tasks terminated and they were all successful (`}<inlineCode parentName=\"li\">{`stage-state`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`finished`}</inlineCode>{`)`}</li>\n          <li parentName=\"ol\">{`It reached its max progress (`}<inlineCode parentName=\"li\">{`stage-progress`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`1.0`}</inlineCode>{`)`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`The virtual experiment instance did not raise any errors (`}<inlineCode parentName=\"li\">{`error-description`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`\"\"`}</inlineCode>{`)`}</li>\n    </ol>\n    <details><summary>Click to show the full specification of the status dictionary</summary>\n      <ul>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`exit-status`}</inlineCode>{`: The status of the completed experiment. This receives its final value `}<em parentName=\"li\">{`after`}</em>{` `}<inlineCode parentName=\"li\">{`experiment-state`}</inlineCode>{` transitions to either `}<inlineCode parentName=\"li\">{`finished`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`failed`}</inlineCode>{`. Value is one of `}<inlineCode parentName=\"li\">{`[\"Success\", \"Failed\", \"Stopped\", \"\"]`}</inlineCode>{`. Value may be empty while Kubernetes initializes objects.`}</li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`experiment-state`}</inlineCode>{`: Indicates the state of the orchestrator that is executing the experiment tasks. `}<strong parentName=\"li\">{`Not`}</strong>{` to be confused with status of experiment (`}<inlineCode parentName=\"li\">{`exit-status`}</inlineCode>{`). For example, an experiment status can have `}<inlineCode parentName=\"li\">{`experiment-state=finished`}</inlineCode>{` with `}<inlineCode parentName=\"li\">{`exit-status=failed`}</inlineCode>{`. This means that the experiment completed with a failure. The value of `}<inlineCode parentName=\"li\">{`experiment-state`}</inlineCode>{` is one of `}<inlineCode parentName=\"li\">{`[\"unscheduled\", \"running\", \"finished\", \"failed\", \"unschedulable\", \"\"]`}</inlineCode>{`. Value may be empty while Kubernetes initializes objects.`}</li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`stage-state`}</inlineCode>{`: Indicates the state of the active stage in the experiment with the lowest stage index. Value is one of `}<inlineCode parentName=\"li\">{`[\"Initializing\", \"finished\", \"waiting_on_resource\",\"running\", \"component_shutdown\", \"failed\"]`}</inlineCode></li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`error-description`}</inlineCode>{`: A string, which when printed is a human readable description that explains why `}<inlineCode parentName=\"li\">{`exit-status`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`Failed`}</inlineCode>{`.`}</li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`total-progress`}</inlineCode>{`: A number in `}{`[0.0, 1.0]`}{` indicating the progress of the experiment. Note that workflow developers may decide to control this value.`}</li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`stage-progress`}</inlineCode>{`: A number in `}{`[0.0, 1.0]`}{` indicating the progress of the active stage with the lowest stage index. Note that workflow developers may decide to control this value.`}</li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`stages`}</inlineCode>{`: A list of human-readable stage names`}</li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`current-stage`}</inlineCode>{`: UID of stage (e.g. `}<inlineCode parentName=\"li\">{`stage0`}</inlineCode>{`)`}</li>\n        <li parentName=\"ul\"><inlineCode parentName=\"li\">{`meta`}</inlineCode>{`: This is a nested dictionary`}\n          <ul parentName=\"li\">\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`arguments`}</inlineCode>{`: The command-line of the orchestrator`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{`: The list of files that override data files`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`input`}</inlineCode>{`: The list of input files`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pid`}</inlineCode>{`: The process ID of the st4sd orchestrator`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`platform`}</inlineCode>{`: The name of the platform that the virtual experiment instance executes`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`userVariables`}</inlineCode>{`: User provided variables, the schema is  `}<inlineCode parentName=\"li\">{`{'global':{name:value}, 'stages':{index:{name:value}}}`}</inlineCode></li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`variables`}</inlineCode>{`: Global and stage variables active in the `}<inlineCode parentName=\"li\">{`platform`}</inlineCode>{`-scope that the virtual experiment executes. The schema is `}<inlineCode parentName=\"li\">{`{'global':{name:value}, 'stages':{index:{name:value}}}`}</inlineCode></li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`hybridPlatform`}</inlineCode>{`: Name of hybrid-platform for communicating with LSF (can be None),`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`userMetadata`}</inlineCode>{`: A dictionary with `}<inlineCode parentName=\"li\">{`key(str): Any`}</inlineCode>{` value pairs that users can provide`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`instanceName`}</inlineCode>{`: The name of the directory containing the virtual experiment instance.`}</li>\n            <li parentName=\"ul\"><inlineCode parentName=\"li\">{`version`}</inlineCode>{`: The version of the st4sd orchestrator`}</li>\n          </ul>\n        </li>\n      </ul>\n    </details>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["name","_frontmatter","InlineNotification","props","console","warn","mdx","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","Object","assign","mdxType","parentName","isMDXComponent"],"sourceRoot":""}
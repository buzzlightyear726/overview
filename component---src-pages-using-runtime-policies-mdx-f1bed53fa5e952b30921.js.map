{"version":3,"file":"component---src-pages-using-runtime-policies-mdx-f1bed53fa5e952b30921.js","mappings":"iQAMaA,EAAe,CAAC,EACvBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,4EAC5B,cAASC,EAClB,CAAC,EACKG,EAAkBL,EAAc,mBAChCM,EAAcN,EAAc,eAC5BO,EAAaP,EAAc,cAC3BQ,EAAc,CAClBT,aAAAA,GAEIU,EAAYC,EAAAA,EACH,SAASC,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGV,GAAK,YAER,OAAO,QAACO,EAAS,iBAAKD,EAAiBN,EAAK,CAAEU,WAAYA,EAAYC,QAAQ,eAO5E,QAACR,EAAe,CAACQ,QAAQ,oBACvB,iKAEF,QAACP,EAAW,CAACO,QAAQ,gBACvB,QAACN,EAAU,CAACM,QAAQ,cAAY,8BAChC,QAACN,EAAU,CAACM,QAAQ,cAAY,iCAChC,QAACN,EAAU,CAACM,QAAQ,cAAY,6BAChC,QAACN,EAAU,CAACM,QAAQ,cAAY,qCAE9B,gDACA,gJACA,mDACA,qEAAuD,sBAAYC,WAAW,KAAG,iBAA+B,kBAAkB,sBAAYA,WAAW,KAAG,0BAAwC,KAAK,aAAGA,WAAW,IACnN,KAAQ,yEAAuE,WAC/D,MACpB,8BACA,oBAAK,gBAAMA,WAAW,MAClB,UAAa,mBAAiB,kiCAkClC,+CACA,qDACA,mBACE,cAAIA,WAAW,MAAI,oFAAqF,sBAAYA,WAAW,MAAI,0BAAwC,YACzK,cAAIA,WAAW,OACb,cAAIA,WAAW,MAAI,sEAAuE,aAAGA,WAAW,KACpG,KAAQ,2FAAyF,+BAC7D,UACxC,cAAIA,WAAW,MAAI,QAAS,aAAGA,WAAW,KACtC,KAAQ,mEAAiE,eACrD,uBAAuB,sBAAYA,WAAW,MAAI,+BAA6C,kEAG3H,cAAIA,WAAW,MAAI,kHACnB,cAAIA,WAAW,MAAI,kFAErB,uCAAyB,sBAAYA,WAAW,KAAG,iBAA+B,kBAAkB,sBAAYA,WAAW,KAAG,0BAAwC,iBAAiB,sBAAYA,WAAW,KAAG,QAAsB,iBACvO,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBAAe,gDAIhC,sDACA,4LACA,qDACA,mBACE,cAAIA,WAAW,MAAI,4DAA6D,sBAAYA,WAAW,MAAI,wBAAsC,wKAC/I,cAAIA,WAAW,OACb,cAAIA,WAAW,MAAI,kBAAmB,sBAAYA,WAAW,MAAI,SAAuB,2HAA2H,sBAAYA,WAAW,MAAI,0BAAwC,kNACtR,cAAIA,WAAW,MAAI,oGAGvB,cAAIA,WAAW,MAAI,sBAAuB,sBAAYA,WAAW,MAAI,SAAuB,yDAC5F,cAAIA,WAAW,MAAI,mEAErB,uCAAyB,sBAAYA,WAAW,KAAG,iBAA+B,kBAAkB,sBAAYA,WAAW,KAAG,0BAAwC,iBAAiB,sBAAYA,WAAW,KAAG,QAAsB,iBACvO,oBAAK,gBAAMA,WAAW,MAClB,UAAa,iBAAe,wJAQpC,CAEAH,EAAWI,gBAAiB,C","sources":["webpack://st4sd-overview/./src/pages/using-runtime-policies.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/alessandropomponio/Documents/GitHub/public/st4sd/overview/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {/*\n       Copyright IBM Inc. All Rights Reserved.\n      SPDX-License-Identifier: Apache-2.0\n     */}\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Use this page to learn how to use the ST4SD runtime policies, for example to execute parameterised packages that contain surrogate models.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">What is a runtime policy?</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">How to use a runtime policy?</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Policy: prefer-surrogate</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Policy: random-canary-surrogate</AnchorLink>\n    </AnchorLinks>\n    <h2>{`What is a runtime policy?`}</h2>\n    <p>{`Runtime policies are algorithms which modify the default behaviour of ST4SD when its asked to run a parameterised package.`}</p>\n    <h2>{`How to use a runtime policy?`}</h2>\n    <p>{`You can use a runtime policy by configuring the `}<inlineCode parentName=\"p\">{`runtimePolicy`}</inlineCode>{` field of the `}<inlineCode parentName=\"p\">{`api_experiment_start()`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/running-workflows-on-openshift#running-a-virtual-experiment\"\n      }}>{`payload`}</a>{`.`}</p>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`from __future__ import typing\nimport json\ndef experiment_start(api: experiment.service.db.ExperimentRestAPI) -> str:\n    \"\"\"Start an experiment that uses the prefer-surrogate runtime policy\n\n    Arguments:\n      api: An instance of ExperimentRestAPI that has connected to your\n           private ST4SD registry\n\n    Notes:\n\n      The method expects that you have already created the band-gap-dft-gamess-us\n      parameterised package on your ST4SD registry and have synthesized (or imported)\n      a surrogate parameterised package that can substitute band-gap-dft-gamess-us.\n\n    Returns:\n        The UID of the resulting instance\n    \"\"\"\n\n    payload = {\n        \"inputs\": [\n            {\"filename\": \"input_smiles.csv\", \"content\": \"label,smiles\\\\nmy_molecule,CCC\"}\n        ],\n        \"runtimePolicy\": {\n          \"name\": \"prefer-surrogate\"\n        }\n    }\n\n    return api.api_experiment_start(\n        # the identifier of the parameterised virtual experiment package\n        \"band-gap-dft-gamess-us\",\n        payload)\n`}</code></pre>\n    <h2>{`Policy: prefer-surrogate`}</h2>\n    <p>{`The algorithm of the policy is:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Find a suitable surrogate package of the requested parameterised package in the `}<inlineCode parentName=\"li\">{`api_experiment_start()`}</inlineCode>{` payload`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`Find parameterised packages that are the result of synthesizing a `}<a parentName=\"li\" {...{\n              \"href\": \"/overview/using-graph-relationships#automatically-synthesize-new-parameterised-packages\"\n            }}>{`transformation relationship`}</a>{`, AND`}</li>\n          <li parentName=\"ol\">{`The `}<a parentName=\"li\" {...{\n              \"href\": \"/overview/using-graph-relationships#structure-of-a-relationship\"\n            }}>{`outputGraph`}</a>{` of the associated `}<inlineCode parentName=\"li\">{`transformation relationship`}</inlineCode>{` matches a subGraph of the requested parameterised package.`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`If there is a suitable surrogate parameterised package then start it and return the UID of the resulting run.`}</li>\n      <li parentName=\"ol\">{`Otherwise, start and return the UID of the requested parameterised packages.`}</li>\n    </ol>\n    <p>{`The schema of the `}<inlineCode parentName=\"p\">{`runtimePolicy`}</inlineCode>{` field in the `}<inlineCode parentName=\"p\">{`api_experiment_start()`}</inlineCode>{` payload (in `}<inlineCode parentName=\"p\">{`YAML`}</inlineCode>{` format) is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`runtimePolicy:\n  name: prefer-surrogate\n`}</code></pre>\n    <h2>{`Policy: random-canary-surrogate`}</h2>\n    <p>{`In a future version the runtime system will automatically invoke this runtime-policy. However, users can also switch it on manually for their virtual experiment runs.`}</p>\n    <p>{`The algorithm of the policy is:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Toss a weighted coin which shows heads with probability `}<inlineCode parentName=\"li\">{`probabilitySurrogate`}</inlineCode>{`. If the coin shows heads when it lands then attempt to start 2 virtual experiment instances. The requested one AND a surrogate of the requested one (if available).`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`If coin shows `}<inlineCode parentName=\"li\">{`heads`}</inlineCode>{`: then attempt to start 2 virtual experiment instances. An instance using the requested parameterised package from the `}<inlineCode parentName=\"li\">{`api_experiment_start()`}</inlineCode>{` payload and a second one of a suitable surrogate parameterised package (if present). If there is no suitable surrogate parameterised package then start just one run of the requested parameterised package.`}</li>\n          <li parentName=\"ol\">{`Use the same logic as the “prefer-surrogate” to identify one surrogate parameterised package.`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`If the coin shows `}<inlineCode parentName=\"li\">{`tails`}</inlineCode>{` then start just the requested parameterised package`}</li>\n      <li parentName=\"ol\">{`Return the UID of the instance for the parameterised package.`}</li>\n    </ol>\n    <p>{`The schema of the `}<inlineCode parentName=\"p\">{`runtimePolicy`}</inlineCode>{` field in the `}<inlineCode parentName=\"p\">{`api_experiment_start()`}</inlineCode>{` payload (in `}<inlineCode parentName=\"p\">{`YAML`}</inlineCode>{` format) is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`runtimePolicy:\n  name: random-canary-surrogate\n  config: # optional\n    probabilitySurrogate: float from 0.0 to 1.0 (optional, default is 0.5)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}